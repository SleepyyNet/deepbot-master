// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `Scene.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.gen.scene.slice;

/**
 * 场景服务
 **/
public interface SceneServicePrx extends Ice.ObjectPrx
{
    /**
     * 运行场景
     **/
    public boolean runScene(String sceneId, String groupId)
        throws slice.BussinessServiceException;

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean runScene(String sceneId, String groupId, java.util.Map<String, String> __ctx)
        throws slice.BussinessServiceException;

    /**
     * 运行场景
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId);

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId, java.util.Map<String, String> __ctx);

    /**
     * 运行场景
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId, Ice.Callback __cb);

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 运行场景
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId, Callback_SceneService_runScene __cb);

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, String groupId, java.util.Map<String, String> __ctx, Callback_SceneService_runScene __cb);

    /**
     * 运行场景
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, 
                                          String groupId, 
                                          IceInternal.Functional_BoolCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 运行场景
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, 
                                          String groupId, 
                                          IceInternal.Functional_BoolCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, 
                                          String groupId, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_BoolCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 运行场景
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_runScene(String sceneId, 
                                          String groupId, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_BoolCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 运行场景
     * @param __result The asynchronous result object.
     **/
    public boolean end_runScene(Ice.AsyncResult __result)
        throws slice.BussinessServiceException;
}
