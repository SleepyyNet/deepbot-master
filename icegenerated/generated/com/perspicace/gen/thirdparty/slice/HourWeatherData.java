// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `thirdparty.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.gen.thirdparty.slice;

/**
 * 天气小时数据
 **/
public class HourWeatherData implements java.lang.Cloneable, java.io.Serializable
{
    public String time;

    public String weatherCode;

    public String temperature;

    public HourWeatherData()
    {
        time = "";
        weatherCode = "";
        temperature = "";
    }

    public HourWeatherData(String time, String weatherCode, String temperature)
    {
        this.time = time;
        this.weatherCode = weatherCode;
        this.temperature = temperature;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HourWeatherData _r = null;
        if(rhs instanceof HourWeatherData)
        {
            _r = (HourWeatherData)rhs;
        }

        if(_r != null)
        {
            if(time != _r.time)
            {
                if(time == null || _r.time == null || !time.equals(_r.time))
                {
                    return false;
                }
            }
            if(weatherCode != _r.weatherCode)
            {
                if(weatherCode == null || _r.weatherCode == null || !weatherCode.equals(_r.weatherCode))
                {
                    return false;
                }
            }
            if(temperature != _r.temperature)
            {
                if(temperature == null || _r.temperature == null || !temperature.equals(_r.temperature))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::slice::HourWeatherData");
        __h = IceInternal.HashUtil.hashAdd(__h, time);
        __h = IceInternal.HashUtil.hashAdd(__h, weatherCode);
        __h = IceInternal.HashUtil.hashAdd(__h, temperature);
        return __h;
    }

    public HourWeatherData
    clone()
    {
        HourWeatherData c = null;
        try
        {
            c = (HourWeatherData)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(time);
        __os.writeString(weatherCode);
        __os.writeString(temperature);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        time = __is.readString();
        weatherCode = __is.readString();
        temperature = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, HourWeatherData __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public HourWeatherData
    __read(IceInternal.BasicStream __is, HourWeatherData __v)
    {
        if(__v == null)
        {
             __v = new HourWeatherData();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final HourWeatherData __nullMarshalValue = new HourWeatherData();

    public static final long serialVersionUID = 1382994336831212408L;
}
