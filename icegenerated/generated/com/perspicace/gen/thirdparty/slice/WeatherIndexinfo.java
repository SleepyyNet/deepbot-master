// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `thirdparty.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.gen.thirdparty.slice;

public class WeatherIndexinfo implements java.lang.Cloneable, java.io.Serializable
{
    public String title;

    public String desc;

    public WeatherIndexinfo()
    {
        title = "";
        desc = "";
    }

    public WeatherIndexinfo(String title, String desc)
    {
        this.title = title;
        this.desc = desc;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        WeatherIndexinfo _r = null;
        if(rhs instanceof WeatherIndexinfo)
        {
            _r = (WeatherIndexinfo)rhs;
        }

        if(_r != null)
        {
            if(title != _r.title)
            {
                if(title == null || _r.title == null || !title.equals(_r.title))
                {
                    return false;
                }
            }
            if(desc != _r.desc)
            {
                if(desc == null || _r.desc == null || !desc.equals(_r.desc))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::slice::WeatherIndexinfo");
        __h = IceInternal.HashUtil.hashAdd(__h, title);
        __h = IceInternal.HashUtil.hashAdd(__h, desc);
        return __h;
    }

    public WeatherIndexinfo
    clone()
    {
        WeatherIndexinfo c = null;
        try
        {
            c = (WeatherIndexinfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(title);
        __os.writeString(desc);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        title = __is.readString();
        desc = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, WeatherIndexinfo __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public WeatherIndexinfo
    __read(IceInternal.BasicStream __is, WeatherIndexinfo __v)
    {
        if(__v == null)
        {
             __v = new WeatherIndexinfo();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final WeatherIndexinfo __nullMarshalValue = new WeatherIndexinfo();

    public static final long serialVersionUID = 5927015121410696226L;
}
