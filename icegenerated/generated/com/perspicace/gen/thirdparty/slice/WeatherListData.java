// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `thirdparty.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.gen.thirdparty.slice;

/**
 * 路况数据结束
 **/
public class WeatherListData implements java.lang.Cloneable, java.io.Serializable
{
    public String code;

    public String weatherText;

    public String date;

    public String high;

    public String low;

    public WeatherListData()
    {
        code = "";
        weatherText = "";
        date = "";
        high = "";
        low = "";
    }

    public WeatherListData(String code, String weatherText, String date, String high, String low)
    {
        this.code = code;
        this.weatherText = weatherText;
        this.date = date;
        this.high = high;
        this.low = low;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        WeatherListData _r = null;
        if(rhs instanceof WeatherListData)
        {
            _r = (WeatherListData)rhs;
        }

        if(_r != null)
        {
            if(code != _r.code)
            {
                if(code == null || _r.code == null || !code.equals(_r.code))
                {
                    return false;
                }
            }
            if(weatherText != _r.weatherText)
            {
                if(weatherText == null || _r.weatherText == null || !weatherText.equals(_r.weatherText))
                {
                    return false;
                }
            }
            if(date != _r.date)
            {
                if(date == null || _r.date == null || !date.equals(_r.date))
                {
                    return false;
                }
            }
            if(high != _r.high)
            {
                if(high == null || _r.high == null || !high.equals(_r.high))
                {
                    return false;
                }
            }
            if(low != _r.low)
            {
                if(low == null || _r.low == null || !low.equals(_r.low))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::slice::WeatherListData");
        __h = IceInternal.HashUtil.hashAdd(__h, code);
        __h = IceInternal.HashUtil.hashAdd(__h, weatherText);
        __h = IceInternal.HashUtil.hashAdd(__h, date);
        __h = IceInternal.HashUtil.hashAdd(__h, high);
        __h = IceInternal.HashUtil.hashAdd(__h, low);
        return __h;
    }

    public WeatherListData
    clone()
    {
        WeatherListData c = null;
        try
        {
            c = (WeatherListData)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(code);
        __os.writeString(weatherText);
        __os.writeString(date);
        __os.writeString(high);
        __os.writeString(low);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        code = __is.readString();
        weatherText = __is.readString();
        date = __is.readString();
        high = __is.readString();
        low = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, WeatherListData __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public WeatherListData
    __read(IceInternal.BasicStream __is, WeatherListData __v)
    {
        if(__v == null)
        {
             __v = new WeatherListData();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final WeatherListData __nullMarshalValue = new WeatherListData();

    public static final long serialVersionUID = -789266832L;
}
