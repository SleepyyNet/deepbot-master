// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `Perception.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.modules.Perception.PerceptionTxt;

/**
 * 感知
 **/
public interface PerceptionServicePrx extends Ice.ObjectPrx
{
    public void listion(ListionObj listionObj);

    public void listion(ListionObj listionObj, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listion(ListionObj listionObj);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, Ice.Callback __cb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, Callback_PerceptionService_listion __cb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, java.util.Map<String, String> __ctx, Callback_PerceptionService_listion __cb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_listion(ListionObj listionObj, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    public void end_listion(Ice.AsyncResult __result);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     **/
    public String userClientListion(String text, String userId, String groupId, Source src);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     **/
    public String userClientListion(String text, String userId, String groupId, Source src, java.util.Map<String, String> __ctx);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src, java.util.Map<String, String> __ctx);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src, Ice.Callback __cb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src, Callback_PerceptionService_userClientListion __cb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, String userId, String groupId, Source src, java.util.Map<String, String> __ctx, Callback_PerceptionService_userClientListion __cb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, 
                                                   String userId, 
                                                   String groupId, 
                                                   Source src, 
                                                   IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, 
                                                   String userId, 
                                                   String groupId, 
                                                   Source src, 
                                                   IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, 
                                                   String userId, 
                                                   String groupId, 
                                                   Source src, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_userClientListion(String text, 
                                                   String userId, 
                                                   String groupId, 
                                                   Source src, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 用户端语音控制(询问天气，聊天，控制家电等  Source只有3和4)
     * return 返回ai的回复
     * @param __result The asynchronous result object.
     **/
    public String end_userClientListion(Ice.AsyncResult __result);
}
