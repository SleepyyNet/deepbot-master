// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `controller.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.perspicace.modules.Controller.ControllerDevice;

/**
 * 调用设备控制返回的参数
 **/
public class ControllerResultObj implements java.lang.Cloneable, java.io.Serializable
{
    public int result;

    public String msg;

    public ControllerResultObj()
    {
        msg = "";
    }

    public ControllerResultObj(int result, String msg)
    {
        this.result = result;
        this.msg = msg;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ControllerResultObj _r = null;
        if(rhs instanceof ControllerResultObj)
        {
            _r = (ControllerResultObj)rhs;
        }

        if(_r != null)
        {
            if(result != _r.result)
            {
                return false;
            }
            if(msg != _r.msg)
            {
                if(msg == null || _r.msg == null || !msg.equals(_r.msg))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::ControllerDevice::ControllerResultObj");
        __h = IceInternal.HashUtil.hashAdd(__h, result);
        __h = IceInternal.HashUtil.hashAdd(__h, msg);
        return __h;
    }

    public ControllerResultObj
    clone()
    {
        ControllerResultObj c = null;
        try
        {
            c = (ControllerResultObj)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(result);
        __os.writeString(msg);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        result = __is.readInt();
        msg = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, ControllerResultObj __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public ControllerResultObj
    __read(IceInternal.BasicStream __is, ControllerResultObj __v)
    {
        if(__v == null)
        {
             __v = new ControllerResultObj();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final ControllerResultObj __nullMarshalValue = new ControllerResultObj();

    public static final long serialVersionUID = 1120555053L;
}
